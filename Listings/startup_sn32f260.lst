


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ************************
    2 00000000         ; * @file     startup_SN32F260.s
    3 00000000         ; * @brief    CMSIS Cortex-M0 Core Device Startup File
    4 00000000         ; *           for the SONIX SN32F700B Device Series
    5 00000000         ; * @version  V1.0
    6 00000000         ; * @date     July 2016
    7 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
    8 00000000         ; *
    9 00000000         ; * @note
   10 00000000         ; * Copyright (C) 2009-2013 ARM Limited. All rights rese
                       rved.
   11 00000000         ; *
   12 00000000         ; * @par
   13 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M 
   14 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed 
   15 00000000         ; * within development tools that are supporting such AR
                       M based processors. 
   16 00000000         ; *
   17 00000000         ; * @par
   18 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   19 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   20 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   21 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   22 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   23 00000000         ; *
   24 00000000         ; ******************************************************
                       ************************/
   25 00000000         
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size
                               EQU              0x00000000



ARM Macro Assembler    Page 2 


   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              0           ; Reserved
   64 00000014 00000000        DCD              0           ; Reserved
   65 00000018 00000000        DCD              0           ; Reserved
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              0           ; Reserved
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ;External Interrupts
   77 00000040 00000000        DCD              NDT_IRQHandler ; 16+ 0: NDT
   78 00000044 00000000        DCD              USB_IRQHandler ; 16+ 1: USB
   79 00000048 00000000        DCD              0           ; 16+ 2: Reserved
   80 0000004C 00000000        DCD              0           ; 16+ 3: Reserved
   81 00000050 00000000        DCD              0           ; 16+ 4: Reserved
   82 00000054 00000000        DCD              0           ; 16+ 5: Reserved
   83 00000058 00000000        DCD              0           ; 16+ 6: Reserved
   84 0000005C 00000000        DCD              0           ; 16+ 7: Reserved
   85 00000060 00000000        DCD              0           ; 16+ 8: Reserved
   86 00000064 00000000        DCD              0           ; 16+ 9: Reserved
   87 00000068 00000000        DCD              0           ; 16+10: Reserved
   88 0000006C 00000000        DCD              0           ; 16+11: Reserved
   89 00000070 00000000        DCD              0           ; 16+12: Reserved  
                                                                          
   90 00000074 00000000        DCD              SPI0_IRQHandler ; 16+13: SPI0
   91 00000078 00000000        DCD              0           ; 16+14: Reserved
   92 0000007C 00000000        DCD              I2C0_IRQHandler ; 16+15: I2C0  
                                                                          



ARM Macro Assembler    Page 3 


   93 00000080 00000000        DCD              CT16B0_IRQHandler ; 16+16: 16-b
                                                            it Counter-Timer 0
   94 00000084 00000000        DCD              CT16B1_IRQHandler ; 16+17: 16-b
                                                            it Counter-Timer 1
   95 00000088 00000000        DCD              0           ; 16+18: Reserved
   96 0000008C 00000000        DCD              0           ; 16+19: Reserved
   97 00000090 00000000        DCD              0           ; 16+20: Reserved
   98 00000094 00000000        DCD              0           ; 16+21: Reserved
   99 00000098 00000000        DCD              0           ; 16+22: Reserved
  100 0000009C 00000000        DCD              0           ; 16+23: Reserved 
  101 000000A0 00000000        DCD              0           ; 16+24: Reserved  
                                                                          
  102 000000A4 00000000        DCD              WDT_IRQHandler ; 16+25: Watchdo
                                                            g Timer            
                                                                
  103 000000A8 00000000        DCD              LVD_IRQHandler ; 16+26: Low Vol
                                                            tage Detect
  104 000000AC 00000000        DCD              0           ; 16+27: Reserved
  105 000000B0 00000000        DCD              P3_IRQHandler ; 16+28: PIO INT3
                                                            
  106 000000B4 00000000        DCD              P2_IRQHandler ; 16+29: PIO INT2
                                                            
  107 000000B8 00000000        DCD              P1_IRQHandler ; 16+30: PIO INT1
                                                            
  108 000000BC 00000000        DCD              P0_IRQHandler ; 16+31: PIO INT0
                                                            
  109 000000C0         
  110 000000C0         
  111 000000C0         
  112 000000C0         
  113 000000C0         
  114 000000C0         
  115 000000C0         
  116 000000C0                 AREA             |.ARM.__at_0x000000C0|, CODE, R
EADONLY 
                                                            ;AREA CODE;    Defi
                                                            ne,CODE,READONLY
  117 00000000                 ALIGN
  118 00000000         ; User Initial Stack & Heap
  119 00000000                 IF               :DEF:__MICROLIB
  126 00000000         
  127 00000000                 IMPORT           __use_two_region_memory
  128 00000000                 EXPORT           __user_initial_stackheap
  129 00000000         
  130 00000000         __user_initial_stackheap
  131 00000000         
  132 00000000 4802            LDR              R0, =  Heap_Mem
  133 00000002 4903            LDR              R1, =(Stack_Mem + Stack_Size)
  134 00000004 4A01            LDR              R2, = (Heap_Mem +  Heap_Size)
  135 00000006 4A03            LDR              R2, = Stack_Mem
  136 00000008 4770            BX               LR
  137 0000000A 00 00           ALIGN
  138 0000000C                 ENDIF
  139 0000000C         
  140 0000000C         
  141 0000000C         ;AREA |.text|, CODE, READONLY
  142 0000000C 00000000 
              00000200 
              00000000         AREA             |.ARM.__at_0x000000D8|, CODE, R



ARM Macro Assembler    Page 4 


EADONLY 
                                                            ;AREA CODE;    Defi
                                                            ne,CODE,READONLY
  143 00000000         ; Reset Handler
  144 00000000         Reset_Handler
                               PROC
  145 00000000                 EXPORT           Reset_Handler   [WEAK]
  146 00000000 4804            LDR              R0, = 0x00007801
  147 00000002 4700            BX               R0
  148 00000004         
  149 00000004                 IMPORT           __main
  150 00000004 4804            LDR              R0, =__main
  151 00000006 4700            BX               R0
  152 00000008         
  153 00000008                 ENDP
  154 00000008         
  155 00000008         
  156 00000008         
  157 00000008         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)                
  158 00000008         
  159 00000008         NMI_Handler
                               PROC
  160 00000008                 EXPORT           NMI_Handler    [WEAK]
  161 00000008 E7FE            B                .
  162 0000000A                 ENDP
  163 0000000A         HardFault_Handler
                               PROC
  164 0000000A                 EXPORT           HardFault_Handler  [WEAK]
  165 0000000A E7FE            B                .
  166 0000000C                 ENDP
  167 0000000C         SVC_Handler
                               PROC
  168 0000000C                 EXPORT           SVC_Handler    [WEAK]
  169 0000000C E7FE            B                .
  170 0000000E                 ENDP
  171 0000000E         PendSV_Handler
                               PROC
  172 0000000E                 EXPORT           PendSV_Handler   [WEAK]
  173 0000000E E7FE            B                .
  174 00000010                 ENDP
  175 00000010         SysTick_Handler
                               PROC
  176 00000010                 EXPORT           SysTick_Handler   [WEAK]
  177 00000010 E7FE            B                .
  178 00000012                 ENDP
  179 00000012         Default_Handler
                               PROC
  180 00000012                 EXPORT           NDT_IRQHandler   [WEAK]
  181 00000012                 EXPORT           USB_IRQHandler   [WEAK]
  182 00000012                 EXPORT           SPI0_IRQHandler   [WEAK]
  183 00000012                 EXPORT           I2C0_IRQHandler   [WEAK]
  184 00000012                 EXPORT           CT16B0_IRQHandler  [WEAK]
  185 00000012                 EXPORT           CT16B1_IRQHandler  [WEAK]
  186 00000012                 EXPORT           WDT_IRQHandler   [WEAK]
  187 00000012                 EXPORT           LVD_IRQHandler   [WEAK]
  188 00000012                 EXPORT           P3_IRQHandler   [WEAK]
  189 00000012                 EXPORT           P2_IRQHandler   [WEAK]
  190 00000012                 EXPORT           P1_IRQHandler   [WEAK]



ARM Macro Assembler    Page 5 


  191 00000012                 EXPORT           P0_IRQHandler   [WEAK]
  192 00000012         
  193 00000012         NDT_IRQHandler
  194 00000012         USB_IRQHandler
  195 00000012         SPI0_IRQHandler
  196 00000012         I2C0_IRQHandler
  197 00000012         CT16B0_IRQHandler
  198 00000012         CT16B1_IRQHandler
  199 00000012         WDT_IRQHandler
  200 00000012         LVD_IRQHandler
  201 00000012         P3_IRQHandler
  202 00000012         P2_IRQHandler
  203 00000012         P1_IRQHandler
  204 00000012         P0_IRQHandler
  205 00000012         
  206 00000012 E7FE            B                .
  207 00000014                 ENDP
  208 00000014         
  209 00000014 00007801 
              00000000         AREA             |.ARM.__at_0x000077FC|, CODE, R
EADONLY 
                                                            ;AREA CODE;    Defi
                                                            ne,CODE,READONLY
  210 00000000         ;0x77FC
  211 00000000 AAAA5555        DCD              0xAAAA5555  ; 
  212 00000004         ; ISP_MODE_FLAG = 0xAAAA5555 for USER MODE
  213 00000004         
  214 00000004         
  215 00000004         
  216 00000004                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\objects\startup_sn32f260.d -o.\objects\startup_sn32f260.o -IC:\S
lash\work\git_source\Galaxy_Mouse_3325\RTE -I"C:\Program Files (x86)\keil\Keil 
5.18\ARM\PACK\ARM\CMSIS\5.1.0\CMSIS\Include" -I"C:\Program Files (x86)\keil\Kei
l 5.18\ARM\PACK\SONiX\SN32F2_DFP\1.2.8\Device\Include" --predefine="__UVISION_V
ERSION SETA 518" --predefine="_RTE_ SETA 1" --predefine="SN32F260 SETA 1" --lis
t=.\listings\startup_sn32f260.lst RTE\Device\SN32F264S_X\startup_SN32F260.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 133 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 135 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 59 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 132 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 134 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 57 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x000000C0 00000000

Symbol: .ARM.__at_0x000000C0
   Definitions
      At line 116 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: .ARM.__at_0x000000C0 unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 130 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 128 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x000000D8 00000000

Symbol: .ARM.__at_0x000000D8
   Definitions
      At line 142 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: .ARM.__at_0x000000D8 unused
CT16B0_IRQHandler 00000012

Symbol: CT16B0_IRQHandler
   Definitions
      At line 197 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 93 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 184 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

CT16B1_IRQHandler 00000012

Symbol: CT16B1_IRQHandler
   Definitions
      At line 198 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 94 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 185 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

Default_Handler 00000012

Symbol: Default_Handler
   Definitions
      At line 179 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: Default_Handler unused
HardFault_Handler 0000000A

Symbol: HardFault_Handler
   Definitions
      At line 163 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 62 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 164 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

I2C0_IRQHandler 00000012

Symbol: I2C0_IRQHandler
   Definitions
      At line 196 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 92 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 183 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

LVD_IRQHandler 00000012

Symbol: LVD_IRQHandler
   Definitions
      At line 200 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 103 in file RTE\Device\SN32F264S_X\startup_SN32F260.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 187 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

NDT_IRQHandler 00000012

Symbol: NDT_IRQHandler
   Definitions
      At line 193 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 77 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 180 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

NMI_Handler 00000008

Symbol: NMI_Handler
   Definitions
      At line 159 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 61 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 160 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

P0_IRQHandler 00000012

Symbol: P0_IRQHandler
   Definitions
      At line 204 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 108 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 191 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

P1_IRQHandler 00000012

Symbol: P1_IRQHandler
   Definitions
      At line 203 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 107 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 190 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

P2_IRQHandler 00000012

Symbol: P2_IRQHandler
   Definitions
      At line 202 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 106 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 189 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

P3_IRQHandler 00000012

Symbol: P3_IRQHandler
   Definitions
      At line 201 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 105 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 188 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

PendSV_Handler 0000000E

Symbol: PendSV_Handler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 171 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 73 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 172 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 144 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 60 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 145 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

SPI0_IRQHandler 00000012

Symbol: SPI0_IRQHandler
   Definitions
      At line 195 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 90 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 182 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

SVC_Handler 0000000C

Symbol: SVC_Handler
   Definitions
      At line 167 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 70 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 168 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

SysTick_Handler 00000010

Symbol: SysTick_Handler
   Definitions
      At line 175 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 74 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 176 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

USB_IRQHandler 00000012

Symbol: USB_IRQHandler
   Definitions
      At line 194 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 78 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 181 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

WDT_IRQHandler 00000012

Symbol: WDT_IRQHandler
   Definitions
      At line 199 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 102 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 186 in file RTE\Device\SN32F264S_X\startup_SN32F260.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x000077FC 00000000

Symbol: .ARM.__at_0x000077FC
   Definitions
      At line 209 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: .ARM.__at_0x000077FC unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 46 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 134 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 34 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
      At line 133 in file RTE\Device\SN32F264S_X\startup_SN32F260.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 149 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      At line 150 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 127 in file RTE\Device\SN32F264S_X\startup_SN32F260.s
   Uses
      None
Comment: __use_two_region_memory unused
2 symbols
375 symbols in table
